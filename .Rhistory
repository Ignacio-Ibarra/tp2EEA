install.packages("devtools")
install.packages('tidyverse')
getwd()
library(rpart)
library(rattle)
library(tidyverse)
# setwd("C://Users//Federico Checozzi//Documents//R//EEA//Trabajo Práctico 2")
setwd("C://Users//ignac//OneDrive//Escritorio//TP Final EEA//tp2EEA")
dtrain <- read.csv("./datasets/encuesta_salud_train.csv", encoding="UTF-8",stringsAsFactors = TRUE, row.names ="record")
View(dtrain)
tree <- rpart(peso ~ altura + edad, data = dtrain, method = "anova",maxdepth = 3, cp = 0)
fitted.values <- predict(tree, newdata = dtrain)
fancyRpartPlot(tree)
require(rpart.plot)
rpart.plot(tree)
fancyRpartPlot(tree)
fancyRpartPlot(tree, caption = "3° Encuesta Mundial de Salud Escolar (EMSE)")
png("./img/rpart_plot_enc_salud.png")
fancyRpartPlot(tree, caption = "Datos: 3° Encuesta Mundial de Salud Escolar (EMSE)")
dev.off()
png("./img/rpart_plot_enc_salud.png", width = 720, height = 720)
fancyRpartPlot(tree, caption = "Datos: 3° Encuesta Mundial de Salud Escolar (EMSE)")
dev.off()
View(dtrain)
matrix(rbinom(10*1000, 1, .5), ncol=10)
data.frame(x1=rnorm(100),x2=rnorm(100),x3=rnorm(100))
data.frame(matrix(rnorm(10000)+1,ncol=10,nrow=1000))
ej <- data.frame(matrix(rnorm(10000)+1,ncol=10,nrow=1000))
View(ej)
ej <- data.frame(matrix(rnorm(100)+1,ncol=5,nrow=20))
X <- data.frame(matrix(rnorm(100)+1,ncol=5,nrow=20))
Y <- data.frame(matrix(runif(20)+1, ncol = 1, nrow=20))
View(Y)
runif(20)
X$y <- runif(20)
View(X)
d <- data.frame(matrix(rnorm(100)+1,ncol=5,nrow=20))
d$Y <- runif(20)
View(d)
d[ order(d$X4)]
d[ order(d$X4),]
d <- d[ order(d$X4),]
View(d)
dtrain <- dtrain[ order(dtrain$altura),]
View(dtrain)
ver <- dtrain[order(dtrain$altrua), c("altura","edad","peso")]
ver <- dtrain[order(dtrain$altura), c("altura","edad","peso")]
View(ver)
require(data.table)
library(rpart)
library(rattle)
require(rpart.plot)
library(tidyverse)
require(data.table)
# setwd("C://Users//Federico Checozzi//Documents//R//EEA//Trabajo Práctico 2")
setwd("C://Users//ignac//OneDrive//Escritorio//TP Final EEA//tp2EEA")
dtrain <- fread("./datasets/encuesta_salud_train.csv", encoding="UTF-8",stringsAsFactors = TRUE, row.names ="record")
dtrain <- fread("./datasets/encuesta_salud_train.csv",stringsAsFactors = TRUE)
keycol <-c("altura","peso")
setorder(dtrain, keycol)
View(dtrain)
dtrain <- fread("./datasets/encuesta_salud_train.csv",
stringsAsFactors = TRUE,
index="records")
dtrain <- fread("./datasets/encuesta_salud_train.csv",
stringsAsFactors = TRUE,
index="record")
View(dtrain)
dtrain <- fread("./datasets/encuesta_salud_train.csv",
stringsAsFactors = TRUE,
index="record", data.table=TRUE)
View(dtrain)
dtrain <- read.csv("./datasets/encuesta_salud_train.csv", encoding="UTF-8",stringsAsFactors = TRUE, row.names ="record")
dtrain[
with(dtrain, order(c("altura"), c("peso")))
]
dtrain <- dtrain[
with(dtrain, order(c("altura"), c("peso")))
]
View(dtrain)
dtrain <- read.csv("./datasets/encuesta_salud_train.csv", encoding="UTF-8",stringsAsFactors = TRUE, row.names ="record")
dtrain <- dtrain[
with(dtrain, order(c("altura"), c("peso")))
]
dtrain <- read.csv("./datasets/encuesta_salud_train.csv", encoding="UTF-8",stringsAsFactors = TRUE, row.names ="record")
dtrain <- dtrain[
with(dtrain, order(c("altura"), c("peso"))),
]
selected <- fread("./datasets/encuesta_salud_train.csv", select = c("altura","edad","peso"))
View(selected)
selected <- fread("./datasets/encuesta_salud_train.csv", select = c("altura","edad","peso"))
keys <- c("altrua","peso")
setorderv(selected, keys)
selected <- fread("./datasets/encuesta_salud_train.csv", select = c("altura","edad","peso"))
keys <- c("altura","peso")
setorderv(selected, keys)
View(selected)
setorderv(selected, keys)
selected
View(selected)
library(rpart)
library(rattle)
require(rpart.plot)
library(tidyverse)
require(data.table)
# setwd("C://Users//Federico Checozzi//Documents//R//EEA//Trabajo Práctico 2")
setwd("C://Users//ignac//OneDrive//Escritorio//TP Final EEA//tp2EEA")
dtrain <- read.csv("./datasets/encuesta_salud_train.csv", encoding="UTF-8",stringsAsFactors = TRUE, row.names ="record")
tree <- rpart(peso ~ altura + edad, data = dtrain, method = "anova",maxdepth = 3, cp = 0)
fitted.values <- predict(tree, newdata = dtrain)
#gráfico
frame <- tree$frame
View(frame)
nodevec <- as.numeric(row.names(frame[frame$var == "<leaf>",])) #esto genera un vector con los números de nodos terminales
path.list <- path.rpart(tree, nodes = nodevec) #genera una lista en la cual cada elemento indica el camino a un nodo
View(path.list)
rect_info <- NULL
for(path in path.list){
path <- setdiff(path,"root")
min.h = min(dtrain$altura)
max.h = max(dtrain$altura)
min.a = min(dtrain$edad)
max.a = max(dtrain$edad)
for(split in path){
s <- unlist(str_split(split,"< |>="))
var <- s[1]
cutoff <- as.numeric(s[2])
is.less <- str_detect(split,"< ")
if(var == "altura"){
if(is.less == TRUE){
max.h <- cutoff
} else {
min.h <- cutoff
}
} else {
if(is.less == TRUE){
max.a <- cutoff
} else {
min.a <- cutoff
}
}
}
rect_info <- rbind(rect_info,data.frame(xmin = min.h, xmax = max.h, ymin = min.a, ymax = max.a))
}
ggplot() +
geom_rect(data = rect_info,aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),colour = "grey50", fill = "white") +
geom_point(data = dtrain,aes(x = altura, y = edad, color = as.factor(fitted.values)))
set.seed(20)
q <- seq(from=0, to=20, by=0.1)
y <- 500 + 0.4 * (q-10)^3
noise <- rnorm(length(q), mean=10, sd=80)
noisy.y <- y + noise
plot(q,noisy.y,col='deepskyblue4',xlab='q',main='Observed data')
lines(q,y,col='firebrick1',lwd=3)
set.seed(20)
q <- seq(from=0, to=20, by=0.1)
y <- 500 + 0.4 * (q-10)^3
noise <- rnorm(length(q), mean=0, sd=80)
noisy.y <- y + noise
plot(q,noisy.y,col='deepskyblue4',xlab='q',main='Observed data')
lines(q,y,col='firebrick1',lwd=3)
set.seed(20)
q <- seq(from=0, to=20, by=0.1)
y <- 500 + 0.4 * (q-10)^3
noise <- rnorm(length(q), mean=40, sd=80)
noisy.y <- y + noise
plot(q,noisy.y,col='deepskyblue4',xlab='q',main='Observed data')
lines(q,y,col='firebrick1',lwd=3)
set.seed(20)
q <- seq(from=0.1, to=20, by=0.1)
y <- 500 + 0.4 * sin(q)
noise <- rnorm(length(q), mean=40, sd=80)
noisy.y <- y + noise
plot(q,noisy.y,col='deepskyblue4',xlab='q',main='Observed data')
lines(q,y,col='firebrick1',lwd=3)
set.seed(20)
q <- seq(from=0.1, to=20, by=0.1)
y <- 500 + 0.4 * sin(q)
noise <- rnorm(length(q), mean=0, sd=1)
noisy.y <- y + noise
plot(q,noisy.y,col='deepskyblue4',xlab='q',main='Observed data')
lines(q,y,col='firebrick1',lwd=3)
set.seed(20)
q <- seq(from=0.1, to=20, by=0.1)
y <- 0.4 * sin(q)
noise <- rnorm(length(q), mean=0, sd=0.2)
noisy.y <- y + noise
plot(q,noisy.y,col='deepskyblue4',xlab='q',main='Observed data')
lines(q,y,col='firebrick1',lwd=3)
set.seed(20)
q <- seq(from=0.1, to=20, by=0.1)
y <- 0.4 * sin(q)
noise <- rnorm(length(q), mean=0, sd=1)
noisy.y <- y + noise
plot(q,noisy.y,col='deepskyblue4',xlab='q',main='Observed data')
lines(q,y,col='firebrick1',lwd=3)
set.seed(20)
q <- seq(from=0.1, to=20, by=0.1)
y <- 0.4 * sin(q)
noise <- rnorm(length(q), mean=0, sd=0.5)
noisy.y <- y + noise
plot(q,noisy.y,col='deepskyblue4',xlab='q',main='Observed data')
lines(q,y,col='firebrick1',lwd=3)
set.seed(20)
q <- seq(from=0.1, to=20, by=0.1)
y <- 0.4 * sin(q)
noise <- rnorm(length(q), mean=1, sd=0.5)
noisy.y <- y + noise
plot(q,noisy.y,col='deepskyblue4',xlab='q',main='Observed data')
lines(q,y,col='firebrick1',lwd=3)
set.seed(20)
q <- seq(from=0.1, to=20, by=0.1)
y <- 0.4 * sin(q)
noise <- rnorm(length(q), mean=0.02, sd=0.5)
noisy.y <- y + noise
plot(q,noisy.y,col='deepskyblue4',xlab='q',main='Observed data')
# lines(q,y,col='firebrick1',lwd=3)
